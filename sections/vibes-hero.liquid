<style>
    .container-hero {
        height: 80vh;
        width: 100vw;
        display: flex;
        justify-content: center;
        flex-direction: column;
    }

    h1 {
        color: white;
        text-align: center;
        font-family: "Neuropolitical";
        font-size: 12rem

    }

  


    
    @media (prefers-reduced-motion:no-preference) {
  [letter-animation=hover]:hover>span {
    display: inline-block;
    transform: scale(.75) perspective(1px)
  }

  [letter-animation=hover]>span {
    transition: transform .3s ease;
    cursor: pointer;
    will-change: transform
  }

  [letter-animation=hover]>span:hover {
    transform: scale(1.25) perspective(1px)
  }
}
    


</style>

<div class="container-hero">
    <h1 split-by="letter" letter-animation="hover">
        2KVIBES
    </h1>   
</div>

<script>
   
        const span = (text, index) => {
  const node = document.createElement('span')

  node.textContent = text
  node.style.setProperty('--index', index)
  
  return node
}

const byLetter = text =>
  [...text].map(span)

const {matches:motionOK} = window.matchMedia(
  '(prefers-reduced-motion: no-preference)'
)

if (motionOK) {
  const splitTargets = document.querySelectorAll('[split-by]')

  splitTargets.forEach(node => {
    let nodes = byLetter(node.innerText)

    if (nodes)
      node.firstChild.replaceWith(...nodes)
  })
}
   
        



</script>


{% schema %}
    {       
        "name": "Vibes Hero Section",
        "settings": [],
        "presets": [
            {
                "name": "Vibes Hero Section"
            }
        ]
    }
{% endschema %}